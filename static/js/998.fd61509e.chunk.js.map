{"version":3,"file":"static/js/998.fd61509e.chunk.js","mappings":"wSAEaA,EAAOC,EAAAA,GAAAA,KAAH,iLASJC,EAAQD,EAAAA,GAAAA,MAAH,mGAMLE,EAAQF,EAAAA,GAAAA,MAAH,gEAKLG,EAAWH,EAAAA,GAAAA,OAAH,kM,UC+CrB,EA/Dc,WACZ,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,IAAMC,EAAOD,EAAEE,cAAcD,KACvBE,EAAQH,EAAEE,cAAcC,MAC9B,OAAQF,GACN,IAAK,QACHP,EAASS,GACT,MAEF,IAAK,WACHP,EAAYO,GACZ,MAEF,QACE,OAEL,EAEKC,EAAgB,mCAAG,WAAMJ,GAAN,iEACvBA,EAAEK,iBACFR,GAASS,EAAAA,EAAAA,IAAM,CAAEb,MAAAA,EAAOE,SAAAA,KACxBY,IAHuB,2CAAH,sDAMhBA,EAAQ,WACZb,EAAS,IACTE,EAAY,GACb,EAED,OACE,iCACE,UAACT,EAAD,CAAMqB,SAAUJ,EAAhB,WACE,UAACf,EAAD,WAAO,QAEL,SAACC,EAAD,CACEmB,KAAK,QACLR,KAAK,QACLS,YAAY,qBACZC,SAAUZ,EACVa,UAAQ,QAGZ,UAACvB,EAAD,WAAO,YAEL,SAACC,EAAD,CACEmB,KAAK,WACLR,KAAK,WACLU,SAAUZ,EACVa,UAAQ,QAGZ,SAACrB,EAAD,CAAUkB,KAAK,SAAf,SAAwB,gBAG1B,SAAC,EAAAI,KAAD,CAAMC,GAAG,YAAT,SAAqB,qCAG1B,ECzDD,EARkB,WAChB,OACE,iCACE,wBAAI,WACJ,SAAC,EAAD,MAGL,C,sBCTc,SAASC,EAAuBC,EAASC,GAItD,OAHKA,IACHA,EAAMD,EAAQE,MAAM,IAEfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHd,MAAOgB,OAAOC,OAAOH,MAG3B,C","sources":["components/Login/Login.styled.jsx","components/Login/Login.jsx","pages/LoginPage/LoginPage.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  /* justify-content: center;\n  align-items: center; */\n  flex-direction: column;\n  gap: 15px;\n  width: 300px;\n  margin: 0 auto;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  color: #fff;\n`;\nexport const Input = styled.input`\n  /* width: 300px; */\n  height: 30px;\n`;\n\nexport const LoginBtn = styled.button`\n  width: 100px;\n  height: 40px;\n  border-radius: 10px;\n  margin: 0 auto;\n  cursor: pointer;\n  color: #fff;\n  background-color: #000;\n  text-transform: uppercase;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { Form, Input, Label, LoginBtn } from './Login.styled';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const name = e.currentTarget.name;\n    const value = e.currentTarget.value;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n    dispatch(logIn({ email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmitForm}>\n        <Label>\n          mail\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"sophie@example.com\"\n            onChange={handleInputChange}\n            required\n          />\n        </Label>\n        <Label>\n          password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            required\n          />\n        </Label>\n        <LoginBtn type=\"submit\">sing in</LoginBtn>\n      </Form>\n\n      <Link to=\"/register\">Don't have an account? Sign Up</Link>\n    </>\n  );\n};\n\nexport default Login;\n","import Login from 'components/Login';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <h2>Login</h2>\n      <Login />\n    </>\n  );\n};\nexport default LoginPage;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Form","styled","Label","Input","LoginBtn","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleInputChange","e","name","currentTarget","value","handleSubmitForm","preventDefault","logIn","reset","onSubmit","type","placeholder","onChange","required","Link","to","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}