{"version":3,"file":"static/js/41.8fb429f4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"add-btn\":\"ContactForm_add-btn__SK70x\"};","export const getError = state => state.contacts.error;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getContacts = state => state.contacts.items;\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContsct } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const name = e.currentTarget.name;\n    const value = e.currentTarget.value;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkNewName = name => {\n    if (contacts) {\n      const normalizeDataName = name.toLowerCase();\n      const nameIsWritten = contacts.some(\n        contact => contact.name.toLowerCase() === normalizeDataName\n      );\n      return nameIsWritten;\n    } else {\n      return false;\n    }\n  };\n\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n    if (!checkNewName(name)) {\n      const newContact = { name, number };\n      await dispatch(addContsct(newContact));\n      reset();\n    } else {\n      Notify.failure(`${name} is already in contacts.`);\n    }\n    document.activeElement.blur();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmitForm}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />{' '}\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={css['add-btn']} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts-list\":\"ContactList_contacts-list__e0xEn\",\"contacts-text\":\"ContactList_contacts-text__8ebfR\",\"contacts-item\":\"ContactList_contacts-item__w1cuY\",\"delete-btn\":\"ContactList_delete-btn__JtJ33\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/slice';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n// import IconButton from '@mui/material/IconButton';\n// import DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return [];\n  };\n\n  return filteredContacts().length > 0 ? (\n    <ul className={css['contacts-list']}>\n      {filteredContacts().map(({ id, name, number }) => (\n        <li className={css['contacts-item']} key={id}>\n          <p className={css['contacts-name']}>{name}</p>\n          <p className={css['contacts-number']}>{number}</p>\n          <button\n            type=\"button\"\n            className={css['delete-btn']}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            X\n          </button>\n          {/* <IconButton\n            aria-label=\"delete\"\n            color=\"primary\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <DeleteIcon />\n          </IconButton> */}\n        </li>\n      ))}\n    </ul>\n  ) : filter !== '' ? (\n    <p className={css['contacts-text']}>\n      There are no saved contacts with this name.\n    </p>\n  ) : (\n    <p className={css['contacts-text']}>There are no contacts.</p>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__9uczQ\"};","import css from './Error.module.css';\nimport { useSelector } from 'react-redux';\nimport { getError } from 'redux/contacts/selectors';\n\nconst Error = () => {\n  const error = useSelector(getError);\n  return <p className={css['error']}>{error}</p>;\n};\n\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { update } from 'redux/filter/slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    const filter = e.currentTarget.value.trim();\n    dispatch(update(filter));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={onChangeFilter}\n      ></input>\n    </label>\n  );\n};\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Error from 'components/Error';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <div className=\"wrap\">\n        <ContactForm />\n        <div>\n          <h2>Contacts</h2>\n          <Filter />\n          {isLoading ? <Loader /> : error ? <Error /> : <ContactList />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getError","state","contacts","error","getIsLoading","isLoading","getContacts","items","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","checkNewName","normalizeDataName","toLowerCase","some","contact","handleSubmitForm","preventDefault","newContact","addContsct","reset","Notify","document","activeElement","blur","className","css","onSubmit","type","pattern","title","required","onChange","filter","getFilter","filteredContacts","normalizedFilter","includes","length","map","id","onClick","deleteContact","trim","update","useEffect","fetchContacts","Loader"],"sourceRoot":""}